/**
 * Minified by jsDelivr using Terser v5.17.1.
 * Original file: /npm/opus-media-recorder@0.8.0/commonFunctions.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
function writeString(e,t,r){for(let s=0;s<r.length;s++)e.setUint8(t+s,r.charCodeAt(s))}class _AllocatedPointer{constructor(e,t,r,s){switch(this._size=t,this._module=e,this._size){case 1:this._heapArray=r?this._module.HEAP8:this._module.HEAPU8;break;case 2:this._heapArray=r?this._module.HEAP16:this._module.HEAPU16;break;case 4:this._heapArray=r?this._module.HEAP32:this._module.HEAPU32;break;default:this._heapArray=this._module.HEAPU8}s&&(this._size=4,this._heapArray=this._module.HEAPF32),this._pointer=this._module._malloc(t)}free(){this._module._free(this.pointer)}get pointer(){return this._pointer}get value(){let e=0;switch(this._size){case 2:e=1;break;case 4:e=2;break;default:throw new Error("Pointer can be only deferenced as integer-sized")}return this._heapArray[this.pointer>>e]}set value(e){let t=0;switch(this._size){case 2:t=1;break;case 4:t=2;break;default:throw new Error("Pointer can be only deferenced as integer-sized")}this._heapArray[this.pointer>>t]=e}}class _Int32Pointer extends _AllocatedPointer{constructor(e,t){super(e,4,!0,!1),void 0!==t&&(this.value=t)}}class _Uint32Pointer extends _AllocatedPointer{constructor(e,t){super(e,4,!1,!1),void 0!==t&&(this.value=t)}}class _AllocatedBuffer extends _AllocatedPointer{constructor(e,t,r,s,i){super(e,t*r,s,i);let o=0;switch(r){case 1:this._heapArray=s?this._module.HEAP8:this._module.HEAPU8,o=0;break;case 2:this._heapArray=s?this._module.HEAP16:this._module.HEAPU16,o=1;break;case 4:this._heapArray=s?this._module.HEAP32:this._module.HEAPU32,o=2;break;default:throw new Error("Unit size must be an integer-size")}i&&(this._heapArray=this._module.HEAPF32,o=2);let a=this._pointer>>o;this._buffer=this._heapArray.subarray(a,a+t),this._length=t}set(e,t){this._buffer.set(e,t)}subarray(e,t){return this._buffer.subarray(e,t)}get length(){return this._length}}class _Float32Buffer extends _AllocatedBuffer{constructor(e,t){super(e,t,4,!0,!0)}}class _Uint8Buffer extends _AllocatedBuffer{constructor(e,t){super(e,t,1,!1,!1)}}class EmscriptenMemoryAllocator{constructor(e){this._module=e}mallocInt32(e){return new _Int32Pointer(this._module,e)}mallocUint32(e){return new _Uint32Pointer(this._module,e)}mallocUint8Buffer(e){return new _Uint8Buffer(this._module,e)}mallocFloat32Buffer(e){return new _Float32Buffer(this._module,e)}}module.exports={writeString:writeString,EmscriptenMemoryAllocator:EmscriptenMemoryAllocator};
//# sourceMappingURL=/sm/56830e72e8c536c4be807c1717c8f16624b2d279b949b3eb37c7c25a9b462214.map