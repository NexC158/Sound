/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/opus-media-recorder@0.8.0/encoderWorker.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
function initWorker(e){const a=require("./WaveEncoder.js"),o=require("./WebMOpusEncoder.js"),n=require("./OggOpusEncoder.js");let t;e.onmessage=function(e){const{command:s}=e.data;switch(s){case"loadEncoder":const{mimeType:c,wasmPath:r}=e.data;let d;switch(c){case"audio/wav":case"audio/wave":d=a;break;case"audio/webm":d=o;break;case"audio/ogg":d=n}let i={};r&&(i.locateFile=function(e,a){return e.match(/.wasm/)?r:a+e}),d(i).then((e=>{t=e,self.postMessage({command:"readyToInit"})}));break;case"init":const{sampleRate:l,channelCount:u,bitsPerSecond:f}=e.data;t.init(l,u,f);break;case"pushInputData":const{channelBuffers:m,length:b,duration:p}=e.data;for(let e=0;e<m.length;e++)m[e]=new Float32Array(m[e].buffer);t.encode(m);break;case"getEncodedData":case"done":"done"===s&&t.close();const h=t.flush();self.postMessage({command:"done"===s?"lastEncodedData":"encodedData",buffers:h},h),"done"===s&&self.close()}}}"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&initWorker(self),module.exports=initWorker;
//# sourceMappingURL=/sm/0de7054878fca1612407b92f8bdff855535f5fa2919a72ed889d731d56077d3a.map